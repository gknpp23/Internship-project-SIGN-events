/* =================================================================
   ESTILOS PARA O COMPONENTE DE UPLOAD DE ARQUIVOS (FILE DROP ZONE)
   Reutiliza as variáveis de design do nosso arquivo _base.scss.
================================================================= */

.file-drop-zone {
  // Define o container como um flexbox para centralizar o conteúdo.
  display: flex;
  justify-content: center;
  align-items: center;

  // Estilo visual da "zona de soltar".
  padding: 2rem;
  border: 2px dashed var(--color-border, #bbbfc1);
  border-radius: 8px;
  background-color: var(--color-background-panel, #ffffff);
  text-align: center;
  cursor: pointer;
  transition: all 0.2s ease-in-out;

  // Feedback visual ao passar o mouse.
  &:hover {
    border-color: var(--color-primary, #262f68);
    background-color: rgba(38, 47, 104, 0.05);
  }

  /* Classe a ser adicionada via JavaScript/Angular quando um arquivo 
    estiver sendo arrastado sobre a zona, para um feedback claro.
  */
  &.is-dragging-over {
    border-color: var(--color-primary, #262f68);
    background-color: rgba(38, 47, 104, 0.1);
    transform: scale(1.02);
  }
}

// O input de arquivo real é escondido, pois a <label> o controla.
.file-drop-zone__input {
  display: none;
}

// O conteúdo dentro da zona de soltar.
.file-drop-zone__label {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem;
  color: var(--color-text-light, #818181);
  font-family: var(--font-family-body, sans-serif);
  font-weight: 500;
  pointer-events: none; // Garante que cliques no texto ou ícone acionem o input.
}

// Estilo para o ícone de clipe dentro da zona.
.file-drop-zone__icon {
  // A classe .icon-button (que deve ser aplicada ao app-attachment)
  // já define o tamanho, então aqui apenas ajustamos a cor.
  color: var(--color-text-light, #818181);
}
